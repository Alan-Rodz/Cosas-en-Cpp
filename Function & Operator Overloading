//Function Overloading
#include <iostream> 
using namespace std; 
  
void print(int i) 
{ 
  cout << " Here is int " << i << endl; 
} 
void print(double  f) 
{ 
  cout << " Here is float " << f << endl; 
} 
void print(char const *c) 
{ 
  cout << " Here is char* " << c << endl; 
} 
  
int main() 
{ 
  print(10); 
  print(10.10); 
  print("ten"); 
  return 0; 
}
-----------------------------------------------------------
//Operator Overloading
#include<iostream> 
using namespace std; 

class Complex 
{ 
private: 
    int real, imag; 
public: 
    Complex(int r = 0, int i =0) {real = r; imag = i;} 
    
    // This is automatically called when '+' is used with 
    // between two Complex objects 
    Complex operator + (Complex const &obj) 
{ 
        Complex res; 
        res.real = real + obj.real; 
        res.imag = imag + obj.imag; 
        return res; 
    } 
    void print() { cout << real << " + i" << imag << endl; } 
}; 

int main() 
{ 
    Complex c1(10, 5), c2(2, 4); 
    Complex c3 = c1 + c2; // An example call to "operator+" 
    c3.print(); 
} 
